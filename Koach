import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, PermissionsAndroid } from 'react-native';
import * as Facebook from 'expo-facebook';
import * as Google from 'expo-google-app-auth';
import * as SMS from 'expo-sms';

const Login = ({ navigation }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [verificationCode, setVerificationCode] = useState('');

  const handleLogin = () => {
    if (username === 'admin' && password === 'password') {
      navigation.navigate('Home');
    } else {
      Alert.alert('Error', 'The username or password you have entered is incorrect', [{ text: 'OK' }]);
    }
  };

  const handleFacebookLogin = async () => {
    try {
      await Facebook.initializeAsync('APP_ID');
      const { type, token } = await Facebook.logInWithReadPermissionsAsync({
        permissions: ['public_profile'],
      });
      if (type === 'success') {
        // Get user's name using Facebook Graph API
        const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);
        const json = await response.json();
        Alert.alert('Success', `You are logged in as ${json.name}!`, [{ text: 'OK' }]);
        navigation.navigate('Home');
      } else {
        Alert.alert('Error', 'Facebook login failed', [{ text: 'OK' }]);
      }
    } catch ({ message }) {
      Alert.alert('Error', `Facebook login error: ${message}`, [{ text: 'OK' }]);
    }
  };

  const handleGoogleLogin = async () => {
    try {
      const result = await Google.logInAsync({
        androidClientId: 'ANDROID_CLIENT_ID',
        iosClientId: 'IOS_CLIENT_ID',
        scopes: ['profile', 'email'],
      });

      if (result.type === 'success') {
        Alert.alert('Success', `Logged in as ${result.user.name}!`, [{ text: 'OK' }]);
        navigation.navigate('Home');
      } else {
        Alert.alert('Error', 'Google login failed', [{ text: 'OK' }]);
      }
    } catch (e) {
      Alert.alert('Error', `Google login error: ${e}`, [{ text: 'OK' }]);
    }
  };

  const handlePhoneVerification = async () => {
    try {
      // Check for SMS permission
      const granted = await PermissionsAndroid.request(
        PermissionsAndroid.PERMISSIONS.SEND_SMS,
        {
          title: 'Send SMS Permission',
          message: 'This app needs the ability to send an SMS to verify your phone number',
          buttonNe
